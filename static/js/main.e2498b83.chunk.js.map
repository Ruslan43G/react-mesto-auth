{"version":3,"sources":["images/header/Vector.svg","images/profile/image.jpg","components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","utils/Api.js","components/PopupWithForm.js","components/EditProfilePopup.js","components/ImagePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/ConfirmDeletePopup.js","components/FormAuth.js","components/Login.js","components/Register.js","components/InfoTooltip.js","components/ProtectedRoute.js","utils/Auth.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","props","className","src","logo","alt","loggedIn","to","setLink","link","title","email","type","onClick","CurrentUserContext","React","createContext","Card","user","useContext","isOwn","card","owner","_id","trashButtonClassName","isLiked","likes","some","item","likeButtonClassName","data-owner","name","onTrashClick","onLikeClick","length","Main","avatar","onEditAvatar","onEditProfile","about","onAddPlace","cards","map","key","onCardDelete","onCardLike","onCardClick","Footer","api","options","this","_url","baseUrl","_headers","headers","token","authorization","formData","fetch","method","body","JSON","stringify","then","res","ok","json","Promise","reject","status","statusText","newUserData","cardId","boolean","PopupWithForm","isOpen","evt","target","classList","contains","onClose","onSubmit","id","noValidate","children","disabled","buttonState","aria-label","isLoading","buttonText","EitProfilePopup","useState","setName","description","setDescription","useEffect","inputNameError","setInputNameError","spanNameText","setSpanNameText","inputAboutError","setInputAboutError","spanAboutText","setSpanboutText","setButtonState","checkButtonState","closest","checkValidity","preventDefault","onChange","value","validity","valid","validationMessage","placeholder","minLength","maxLength","pattern","required","ImagePopup","EditAvatarPopup","avatarRef","useRef","inputError","setInputError","spanText","setSpanText","current","ref","AddPlacePopup","newCard","setNewCard","inputUrlError","setInputUrlError","spanUrlText","setSpanUrlText","ConfirmDeletePopup","FormAuth","setEmail","setPassword","route","linkText","Login","password","Register","InfoTooltip","success","ProtectedRoute","Component","component","auth","data","jwt","localStorage","getItem","App","currentUser","setCurrentUser","deleteCard","setDeleteCard","profileIsOpen","setProfileIsOpen","avatarIsOpen","setAvatarIsOpen","addCardIsOpen","setAddCardIsOpen","selectedCard","setSelectedCard","deleteIsOpen","setDeleteIsOpen","tooltip","setTooltip","setCards","setIsLoading","setLoggedIn","headerLink","setHeaderLink","history","useHistory","closeAllPopups","setHeaders","all","getUserInfo","getInitialCards","userInfo","initialCards","catch","err","console","log","checkToken","push","Provider","removeItem","exact","path","handleLike","newCards","login","setItem","register","setUserInfo","finally","postNewCard","setUserAvatar","filter","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.e2498b83.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Vector.855a8c98.svg\";","module.exports = __webpack_public_path__ + \"static/media/image.610cd79a.jpg\";","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport logo from '../images/header/Vector.svg'\r\n//компонент хидер\r\nexport default function Header (props) {\r\n    return (\r\n        <header className=\"header\">\r\n          <img className=\"header__logo\" src={logo} alt=\"логотип сервиса\"/>\r\n          {props.loggedIn ? '' : <Link className='header__link' to={`/${props.setLink.link ? 'signin' : 'signup'}`} >{props.setLink.title}</Link>}\r\n          <div className={`header__container ${props.loggedIn ? '' : 'header__container_hidden'}`}>\r\n            <p className='header__email'>{props.email}</p>\r\n            <button className='header__button' type='button' onClick={props.onClick}>Выйти</button>\r\n          </div>\r\n       </header>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport const CurrentUserContext = React.createContext();","import React from 'react';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext.js';\r\n//компонент карточки\r\nexport default function Card (props) {                                                                       // создаём класс для карточки\r\n    //подписываемся на контекс юзера\r\n    const user = React.useContext(CurrentUserContext);\r\n    //определяем отображение иконки удаления\r\n    const isOwn = props.card.owner === user._id;\r\n    const trashButtonClassName = `${isOwn ? 'elements__trash' : 'elements__trash elements__trash_hidden' }`;\r\n    //определяем отображение лайка\r\n    const isLiked = props.card.likes.some(item => item === user._id);\r\n    const likeButtonClassName = `${isLiked ? 'elements__like elements__like_active' : 'elements__like'}`;\r\n    //хэндлер клика по картинке для открытия попапа\r\n    function handleClick() {\r\n        props.onClick(props.card);\r\n    }\r\n    function handleLikeOnClick () {\r\n        props.onLikeClick(props.card);\r\n    }\r\n    function handleTrashClick() {\r\n        props.onTrashClick(props.card);\r\n    }\r\n\r\n    // отрисовка компонента\r\n    return (\r\n        <div className=\"elements__item\" data-owner=\"\">\r\n            <img className=\"elements__img\" onClick={handleClick} src={props.card.link} alt={props.card.name} />\r\n            <button className={trashButtonClassName} onClick={handleTrashClick} type=\"button\"></button>\r\n            <h3 className=\"elements__title\">{props.card.name}</h3>\r\n            <button className={likeButtonClassName} onClick={handleLikeOnClick} type=\"button\"></button>\r\n            <p className=\"elements__like-counter\">{props.card.likes.length}</p>\r\n        </div>\r\n    )\r\n\r\n}","import React from 'react';\r\nimport Card from './Card.js';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext.js';\r\nimport avatar from '../images/profile/image.jpg'\r\n//основной компонент. Содержит секцию с профилем и карточками.\r\nexport default function Main (props) {\r\n    //подписка на контекст юзера\r\n    const user = React.useContext(CurrentUserContext);\r\n    \r\n    //Отрисовка компонента\r\n    return (\r\n        <> \r\n            <section className=\"profile\">\r\n                <img className=\"profile__img\" src={user.avatar || avatar} alt=\"автар пользователя\"/>\r\n                <div className=\"profile__img-hover\" onClick={props.onEditAvatar}></div>\r\n                <div className=\"profile__info\">\r\n                    <h1 className=\"profile__name\">{user.name || `Жак-Ив Кусто`}</h1>\r\n                    <button className=\"profile__edit-btn\" onClick={props.onEditProfile} type=\"button\"></button>\r\n                    <p className=\"profile__about\">{user.about || `Исследователь Океана`}</p>\r\n                </div>\r\n                <button className=\"profile__add-btn\" onClick={props.onAddPlace} type=\"button\"></button>\r\n            </section>\r\n            <main className=\"elements\">\r\n                {props.cards.map(item => <Card key={item._id} card={item} onTrashClick={props.onCardDelete} onLikeClick={props.onCardLike} onClick={props.onCardClick} />)}\r\n            </main>\r\n        </>\r\n    )\r\n}\r\n\r\n","import React from 'react';\r\n//компонент футер\r\nexport default function Footer () {\r\n    return (\r\n        <footer className=\"footer\">\r\n           <p className=\"footer__copyright\">&copy; 2020 Руслан Тихомиров</p>\r\n       </footer>\r\n    )\r\n}","\r\nclass Api {\r\n    constructor(options) {\r\n        this._url = options.baseUrl;\r\n        this._headers = options.headers;\r\n    }\r\n\r\n    setHeaders (token) {\r\n        this._headers = {\r\n            ...this._headers,\r\n            authorization: `Bearer ${token}`,\r\n        }\r\n    }\r\n\r\n    postNewCard (formData) {\r\n        return fetch (`${this._url}/cards`, {\r\n            method: 'POST',\r\n            headers: this._headers,\r\n            body: JSON.stringify({\r\n                name: formData.name,\r\n                link: formData.link\r\n            })\r\n            }\r\n        )\r\n        .then((res) => {\r\n            if (res.ok) {\r\n                return res.json();\r\n            }\r\n            return Promise.reject(`${res.status} ${res.statusText}`);\r\n        });\r\n    }\r\n\r\n    getInitialCards() {\r\n        return fetch(`${this._url}/cards`, {\r\n            headers: this._headers,\r\n        })\r\n        .then((res) => {\r\n            if (res.ok) {\r\n                return res.json();\r\n            }\r\n            return Promise.reject(`${res.status} ${res.statusText}`);\r\n        });\r\n    }\r\n\r\n    getUserInfo() {\r\n        return fetch(`${this._url}/users/me`, {\r\n            method: 'GET',\r\n            headers: this._headers,\r\n            })\r\n            .then((res) => {\r\n                if (res.ok) {\r\n                    return res.json();\r\n                }\r\n                return Promise.reject(`Ошибка: ${res.status} ${res.statusText}`);\r\n            });\r\n        \r\n    }\r\n\r\n    setUserInfo(newUserData) {\r\n        return fetch (`${this._url}/users/me`, {\r\n            method: 'PATCH',\r\n            headers: this._headers,\r\n            body: JSON.stringify({\r\n                name: newUserData.name,\r\n                about: newUserData.about\r\n            })\r\n            }\r\n        )\r\n        .then((res) => {\r\n            if (res.ok) {\r\n                return res.json();\r\n            }\r\n            return Promise.reject(`${res.status} ${res.statusText}`);\r\n        })\r\n    }\r\n\r\n    setUserAvatar (newUserData) {\r\n        return fetch (`${this._url}/users/me/avatar`, {\r\n            method: 'PATCH',\r\n            headers: this._headers,\r\n            body: JSON.stringify({\r\n                avatar: newUserData.avatar\r\n            })\r\n            }\r\n        )\r\n        .then((res) => {\r\n            if (res.ok) {\r\n                return res.json();\r\n            }\r\n            return Promise.reject(`Ошибка: ${res.status} ${res.statusText}`);\r\n        })\r\n    }\r\n\r\n    handleLike(cardId, boolean) {\r\n        if (boolean) {\r\n            return fetch(`${this._url}/cards/${cardId}/likes`, {\r\n                method: 'DELETE',\r\n                headers: this._headers\r\n                })\r\n                .then((res) => {\r\n                    if (res.ok) {\r\n                        return res.json();\r\n                    }\r\n                    return Promise.reject(`Ошибка: ${res.status} ${res.statusText}`);\r\n                });\r\n        } else {\r\n            return fetch(`${this._url}/cards/${cardId}/likes`, {\r\n                method: 'PUT',\r\n                headers: this._headers\r\n                })\r\n                .then((res) => {\r\n                    if (res.ok) {\r\n                        return res.json();\r\n                    }\r\n                    return Promise.reject(`Ошибка: ${res.status} ${res.statusText}`);\r\n                });\r\n        }\r\n    }\r\n\r\n    deleteCard(cardId) {\r\n        return fetch(`${this._url}/cards/${cardId}`, {\r\n            method: 'DELETE',\r\n            headers: this._headers\r\n        })\r\n        .then((res) => {\r\n            if (res.ok) {\r\n                return res.json();\r\n            }\r\n            return Promise.reject(`Ошибка: ${res.status} ${res.statusText}`);\r\n        });\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\nconst api = new Api({\r\n    baseUrl: 'https://api.ruslan.mesto.students.nomoreparties.xyz',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    }\r\n})\r\n\r\nexport default api;\r\n","import React from 'react';\r\n\r\nexport default function PopupWithForm (props) {\r\n\r\n    function overlayClickHandler(evt) {\r\n        if (evt.target.classList.contains('popup')) {\r\n            props.onClose();\r\n        }\r\n    }    \r\n\r\n    return (\r\n        <section className={props.isOpen ? `popup ${props.name} popup_opened` : `popup ${props.name}`} onClick={overlayClickHandler}>\r\n            <form onSubmit={props.onSubmit} className='popup__container' id={props.name} noValidate>\r\n                <button className=\"popup__icon-close\" onClick={props.onClose} type=\"reset\"></button>\r\n                <h3 className=\"popup__title popup__title_form\">{props.title}</h3>\r\n                {props.children}\r\n                <button disabled={!props.buttonState} className={props.buttonState ? 'popup__button popup__button_form' : 'popup__button popup__button_form popup__button_disabled'} id=\"profile-save-button\" type=\"submit\" aria-label=\"Сохранить\">{props.isLoading ? 'Загрузка...' : props.buttonText}</button>\r\n            </form>\r\n        </section>\r\n    )\r\n}","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm.js';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext.js';\r\n\r\nexport default function EitProfilePopup (props) {\r\n    const user = React.useContext(CurrentUserContext);\r\n    \r\n    const [name, setName] = React.useState('');\r\n    const [description, setDescription] = React.useState('');\r\n\r\n    React.useEffect(() => {\r\n        setName(user.name);\r\n        setDescription(user.about)\r\n    }, [user])\r\n\r\n    function handleNameInput(evt) {\r\n        setName(evt.target.value);\r\n        if (!evt.target.validity.valid) {\r\n            setInputNameError(true);\r\n            setSpanNameText(evt.target.validationMessage);\r\n            checkButtonState(evt);\r\n        } else {\r\n            setInputNameError(false);\r\n            setSpanNameText('');\r\n            checkButtonState(evt);\r\n        }\r\n    }\r\n\r\n    function handleAboutInput(evt) {\r\n        setDescription(evt.target.value);\r\n        if (!evt.target.validity.valid) {\r\n            setInputAboutError(true);\r\n            setSpanboutText(evt.target.validationMessage);\r\n            checkButtonState(evt);\r\n        } else {\r\n            setInputAboutError(false);\r\n            setSpanboutText('');\r\n            checkButtonState(evt);\r\n        }\r\n    }\r\n\r\n    function handleSubmit(evt) {\r\n        evt.preventDefault();\r\n        props.onSubmit({\r\n            name: name,\r\n            about: description\r\n        })\r\n    }\r\n\r\n    //  стейт переменные для валидации\r\n    const [inputNameError, setInputNameError] = React.useState(false);\r\n    const [spanNameText, setSpanNameText] = React.useState('');\r\n    const [inputAboutError, setInputAboutError] = React.useState(false);\r\n    const [spanAboutText, setSpanboutText] = React.useState('');\r\n    const [buttonState, setButtonState] = React.useState(true); \r\n\r\n    const errorsArray = [inputNameError, inputAboutError];\r\n    function checkButtonState (evt) {\r\n        if (evt.target.closest('form').checkValidity()) {\r\n            setButtonState(true);\r\n            return;\r\n        } else {\r\n            setButtonState(false);\r\n        }\r\n    }\r\n\r\n    function close () {\r\n        props.onClose();\r\n        setInputAboutError(false);\r\n        setSpanboutText('');\r\n        setInputNameError(false);\r\n        setSpanNameText('');\r\n        setButtonState(true);\r\n    }\r\n\r\n    return (\r\n        <PopupWithForm name='popup_profile' buttonText='Сохранить' buttonState={buttonState} onSubmit={handleSubmit} title='Редактировать профиль' isOpen={props.isOpen} onClose={close} isLoading={props.isLoading}>\r\n            <>\r\n                <input onChange={handleNameInput} className={inputNameError ? `popup__input popup__input_type_error` : `popup__input`} id=\"profile-input-name\" name=\"name\" type=\"text\" placeholder=\"Имя\" minLength=\"2\" maxLength=\"40\" pattern=\"^[А-Яа-яЁёA-Za-z\\s-]+$\" required />\r\n                <span className={inputNameError ? 'popup__error popup__error_visible' : 'popup__error'} id=\"profile-input-name-error\">{spanNameText}</span>\r\n                <input onChange={handleAboutInput} className={inputAboutError ? `popup__input popup__input_type_error` : `popup__input`} id=\"profile-input-about\" name=\"job\" type=\"text\" placeholder=\"О себе\" minLength=\"2\" maxLength=\"200\" required />\r\n                <span className={inputAboutError ? 'popup__error popup__error_visible' : 'popup__error'} id=\"profile-input-about-error\">{spanAboutText}</span>\r\n            </>\r\n        </ PopupWithForm>\r\n    )\r\n}","import React from 'react';\r\n// компонент попапа с картинкой\r\nexport default function ImagePopup(props) {\r\n    return (\r\n        <section className={props.card.isOpen ? `popup popup_image` : `popup popup_image popup_opened`}>\r\n           <div className=\"popup__image-container\">\r\n                <button className=\"popup__icon-close popup__icon-close_image\" id=\"close-img-popup\" onClick={props.onClose} type=\"button\"></button>\r\n                <img className=\"popup__image\" src={props.card.link} alt={props.card.name} />\r\n                <p className=\"popup__img-text\">{props.card.name}</p>\r\n            </div>\r\n        </section>\r\n    )\r\n}","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nexport default function EditAvatarPopup (props) {\r\n    const avatarRef = React.useRef();\r\n\r\n    function handleSubmit (evt) {\r\n        evt.preventDefault();\r\n        props.onSubmit({avatar: avatarRef.current.value});\r\n    }\r\n\r\n    //  стейт переменные для валидации\r\n    const [inputError, setInputError] = React.useState(false);\r\n    const [spanText, setSpanText] = React.useState('');\r\n    const [buttonState, setButtonState] = React.useState(false); \r\n\r\n    function onChangeValidation (evt) {\r\n        if (!evt.target.validity.valid) {\r\n            setInputError(true);\r\n            setSpanText(evt.target.validationMessage);\r\n            setButtonState(false);\r\n        } else {\r\n            setInputError(false);\r\n            setSpanText('');\r\n            setButtonState(true);\r\n        }\r\n    }\r\n\r\n    function close () {\r\n        props.onClose();\r\n        setSpanText('');\r\n        setInputError(false);\r\n        setButtonState(true);\r\n    }\r\n\r\n    return (\r\n        <PopupWithForm buttonState={buttonState} name='popup_avatar' buttonText='Сохранить' onSubmit={handleSubmit} title='Обновить аватар' isOpen={props.isOpen} onClose={close} isLoading={props.isLoading}>\r\n            <>\r\n                <input ref={avatarRef} onChange={onChangeValidation} className={inputError ? `popup__input popup__input_type_error` : `popup__input`} id=\"avatar-url-input\" name=\"avatar\" type=\"url\" placeholder=\"Введите url\" required />\r\n                <span className={inputError ? 'popup__error popup__error_visible' : 'popup__error'} id=\"avatar-url-input-error\">{spanText}</span>\r\n            </>\r\n        </PopupWithForm>  \r\n    )\r\n}","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nexport default function AddPlacePopup (props) {\r\n    const [newCard, setNewCard] = React.useState({name: '', link: ''});\r\n\r\n    function handleNameinput(evt) {\r\n        setNewCard({...newCard, name: evt.target.value});\r\n        if (!evt.target.validity.valid) {\r\n            setInputNameError(true);\r\n            setSpanNameText(evt.target.validationMessage);\r\n            setButtonState(false);\r\n        } else {\r\n            setInputNameError(false);\r\n            setSpanNameText('');\r\n            setButtonState(true);\r\n        }\r\n    }\r\n\r\n    function handleLinkInput(evt) {\r\n        setNewCard({...newCard, link: evt.target.value});\r\n        if (!evt.target.validity.valid) {\r\n            setInputUrlError(true);\r\n            setSpanUrlText(evt.target.validationMessage);\r\n            setButtonState(false);\r\n        } else {\r\n            setInputUrlError(false);\r\n            setSpanUrlText('');\r\n            setButtonState(true);\r\n        }\r\n    }\r\n\r\n    function handleOnSubmit(evt) {\r\n        evt.preventDefault();\r\n        props.onSubmit(newCard);\r\n        setNewCard({name: '', link: ''});\r\n    }\r\n\r\n    const [inputNameError, setInputNameError] = React.useState(false);\r\n    const [spanNameText, setSpanNameText] = React.useState('');\r\n    const [inputUrlError, setInputUrlError] = React.useState(false);\r\n    const [spanUrlText, setSpanUrlText] = React.useState(''); \r\n    const [buttonState, setButtonState] = React.useState(false); \r\n\r\n    function close () {\r\n        props.onClose();\r\n        setInputUrlError(false);\r\n        setSpanUrlText('');\r\n        setInputNameError(false);\r\n        setSpanNameText('');\r\n        setButtonState(false);\r\n    }\r\n\r\n    return (\r\n        <PopupWithForm buttonState={buttonState} name='popup_card' buttonText='Создать' onSubmit={handleOnSubmit} title='Новое место' isOpen={props.isOpen} onClose={close} isLoading={props.isLoading}>\r\n            <>\r\n                <input className={inputNameError ? `popup__input popup__input_type_error` : `popup__input`} onChange={handleNameinput} id=\"card-name-input\" name=\"name\" type=\"text\" placeholder=\"Название\" minLength=\"1\" maxLength=\"30\" required />\r\n                <span className={inputNameError ? 'popup__error popup__error_visible' : 'popup__error'} id=\"card-name-input-error\">{spanNameText}</span>\r\n                <input className={inputUrlError ? `popup__input popup__input_type_error` : `popup__input`} onChange={handleLinkInput} id=\"card-url-input\" name=\"link\" type=\"url\" placeholder=\"Ссылка на картинку\"  required />\r\n                <span className={inputUrlError ? 'popup__error popup__error_visible' : 'popup__error'} id=\"card-url-input-error\">{spanUrlText}</span>\r\n            </>\r\n        </PopupWithForm>\r\n    )\r\n}","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nexport default function ConfirmDeletePopup (props) {\r\n\r\n    function submitHandler (evt) {\r\n        evt.preventDefault();\r\n        props.onSubmit()\r\n    }\r\n\r\n    return (\r\n        <PopupWithForm name='popup_delete' buttonState={true} buttonText='Да' title='Вы уверены?' isOpen={props.isOpen} onClose={props.onClose} isLoading={props.isLoading} onSubmit={submitHandler}/>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function FormAuth (props)  {\r\n    function handleEmailInput (evt) {\r\n        props.setEmail(evt.target.value);\r\n    }\r\n\r\n    function handlePasswordInput (evt) {\r\n        props.setPassword(evt.target.value);\r\n    }\r\n\r\n    function submitHandler (evt) {\r\n        evt.preventDefault();\r\n        props.onSubmit();\r\n    }\r\n\r\n    return (\r\n        <form className='form' onSubmit={submitHandler}>\r\n            <h3 className='form__title'>{props.title}</h3>\r\n            <div className='form__input-raw'>\r\n                <input onChange={handleEmailInput} type='email' className='form__input' placeholder='Email' required></input>\r\n                <input onChange={handlePasswordInput} type='password'className='form__input' placeholder='Пароль' required></input>\r\n            </div>\r\n            <button className='form__submit' type='submit'>{props.buttonText}</button>\r\n            <Link className='form__link' to={props.route}>\r\n                {props.linkText}\r\n            </Link>\r\n        </form>\r\n    )\r\n} ","import React from 'react';\r\nimport FormAuth from './FormAuth';\r\n\r\nexport default function Login (props) {\r\n    const [email, setEmail] = React.useState('');\r\n    const [password, setPassword] = React.useState('');\r\n\r\n    React.useEffect(() => {\r\n        props.setLink({title: 'Регистация', link: false});\r\n    }, [])\r\n    \r\n    function onSubmit () {\r\n        props.onSubmit({\r\n            password: password,\r\n            email: email\r\n        }) \r\n    }\r\n\r\n    return (\r\n        <FormAuth title='Вход' buttonText='Войти' linkText='Ещё не зарегистрированы? Регистрация' setEmail={setEmail} setPassword={setPassword} onSubmit={onSubmit} route='./signup'/>\r\n    )\r\n}","import React from 'react';\r\nimport FormAuth from './FormAuth';\r\n\r\nexport default function Register (props) {\r\n    \r\n    const [email, setEmail] = React.useState('');\r\n    const [password, setPassword] = React.useState('');\r\n\r\n    React.useEffect(() => {\r\n        props.setLink({title: 'Войти', link: true});\r\n    }, [])\r\n\r\n    function onSubmit () {\r\n        props.onSubmit({\r\n            password: password,\r\n            email: email\r\n        })   \r\n    }\r\n\r\n    return (\r\n        <FormAuth title='Регистрация' buttonText='Зарегистрироваться' linkText='Уже зарегистрированы? Войти' setEmail={setEmail} setPassword={setPassword} onSubmit={onSubmit} route='/signin'/>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport default function InfoTooltip (props) {\r\n\r\n    return (\r\n        <section className={`popup ${props.options.isOpen ? 'popup_opened' : ''}`}>\r\n            <div className='popup__container popup__container_info'>\r\n                <button className=\"popup__icon-close\" onClick={props.onClose} type=\"reset\"></button>\r\n                <div className={`popup__info ${props.options.success ? 'popup__info_type_success' : 'popup__info_type_fail'}`}></div>\r\n                <h3 className='popup__title_info'>{props.options.title}</h3>\r\n            </div>\r\n        </section>\r\n    )\r\n}","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nexport default function ProtectedRoute ({ component: Component, ...props }) {\r\n    \r\n    return (\r\n        <Route>\r\n            {\r\n                () => props.loggedIn ? <Component {...props} /> : <Redirect to='./signin' />\r\n            }\r\n        </Route>\r\n    )\r\n}","// Модуль для работы с регистрацией и авторизацией\r\nclass Auth {\r\n    constructor (options) {\r\n        this._url = options.baseUrl;\r\n        this._headers = options.headers;\r\n    }\r\n\r\n    register (data) {\r\n        return fetch(`${this._url}/signup`, {\r\n            method: 'POST',\r\n            headers: this._headers,\r\n            body: JSON.stringify({\r\n                password: data.password,\r\n                email: data.email\r\n            })\r\n        }\r\n        )\r\n        .then((res) => res.ok ? res.json() : Promise.reject(`${res.status} ${res.statusText}`));\r\n    }\r\n\r\n    login (data) {\r\n        return fetch(`${this._url}/signin`, {\r\n            method: 'POST',\r\n            headers: this._headers,\r\n            body: JSON.stringify({\r\n                password: data.password,\r\n                email: data.email\r\n            })\r\n        })\r\n        .then((res) => res.ok ? res.json() : Promise.reject(`${res.status} ${res.statusText}`));\r\n    }\r\n\r\n    checkToken () {\r\n        const jwt = localStorage.getItem('jwt');\r\n        return fetch(`${this._url}/users/me`, {\r\n            method: 'GET',\r\n            headers: {\r\n                ...this._headers,\r\n                \"Authorization\": `Bearer ${jwt}`\r\n            }\r\n        })\r\n        .then(res => res.ok ? res.json() : Promise.reject(`${res.status} ${res.statusText}`));\r\n    }\r\n}\r\n\r\nconst auth = new Auth({\r\n    baseUrl: 'https://api.ruslan.mesto.students.nomoreparties.xyz',\r\n    headers: {\r\n        \"Content-Type\": \"application/json\"\r\n    }\r\n})\r\n\r\nexport default auth;\r\n","import React from 'react';\r\nimport { Route, Switch, Redirect, useHistory } from 'react-router-dom';\r\nimport Header from './Header.js';\r\nimport Main from './Main.js';\r\nimport Footer from './Footer.js';\r\nimport api from '../utils/Api.js';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext.js';\r\nimport EditProfilePopup from './EditProfilePopup.js';\r\nimport ImagePopup from './ImagePopup.js';\r\nimport EditAvatarPopup from './EditAvatarPopup.js';\r\nimport AddPlacePopup from './AddPlacePopup.js';\r\nimport ConfirmDeletePopup from \"./ConfirmDeletePopup\";\r\nimport Login from './Login';\r\nimport Register from './Register';\r\nimport InfoTooltip from './InfoTooltip';\r\nimport ProtectedRoute from './ProtectedRoute';\r\nimport auth from '../utils/Auth';\r\n\r\nfunction App() {\r\n  // [переменные состояния]\r\n  const [currentUser, setCurrentUser] = React.useState({name: '', about: '', avatar: '', _id: ''}); // переменная состояния пользователя\r\n    const [deleteCard, setDeleteCard] = React.useState({});\r\n  const [profileIsOpen, setProfileIsOpen] = React.useState(false); // попап профиля\r\n  const [avatarIsOpen, setAvatarIsOpen] = React.useState(false); // попап авата\r\n  const [addCardIsOpen, setAddCardIsOpen] = React.useState(false); // попап добавления карточки\r\n  const [selectedCard, setSelectedCard] = React.useState({        // попап картинки\r\n    isOpen: true,\r\n    link: '',\r\n    name: ''\r\n  });\r\n  const [deleteIsOpen, setDeleteIsOpen] = React.useState(false);\r\n  const [tooltip, setTooltip] = React.useState({\r\n    isOpen: false,\r\n    title: '',\r\n    success: true\r\n  }); // попап с сообщением о регистрации\r\n  const [cards, setCards] = React.useState([]); //массив картчоек\r\n  const [isLoading, setIsLoading] = React.useState(false); //стейт индикатора загрузки\r\n  const [loggedIn, setLoggedIn] = React.useState(false); // стейт авторизации\r\n  const [email, setEmail] = React.useState('');\r\n  const [headerLink, setHeaderLink] = React.useState({title: '', link: true});\r\n\r\n  const history = useHistory();\r\n\r\n  // Запрос данных о юзере и карточках при монтировании, выполняется 1 раз\r\n  React.useEffect(() => {\r\n    const token = localStorage.getItem('jwt');\r\n    api.setHeaders(token);\r\n\r\n    Promise.all([api.getUserInfo(), api.getInitialCards()])\r\n      .then(([userInfo, initialCards]) => {\r\n        setCurrentUser({name: userInfo.user.name, about: userInfo.user.about, avatar: userInfo.user.avatar, _id: userInfo.user._id});\r\n        setCards([...initialCards]);\r\n      })\r\n      .catch(err => console.log(err));\r\n\r\n  }, [loggedIn]);\r\n\r\n  // Проверка токена и его валидности\r\n  React.useEffect(() => {\r\n    auth.checkToken()\r\n      .then((res) => {\r\n        res.user ? setLoggedIn(true) : setLoggedIn(false);\r\n        setEmail(res.user.email);\r\n        history.push('/');\r\n      })\r\n      .catch(err => console.log(err));\r\n  }, [])\r\n\r\n  // функция закрытия всех попапов. Переводит переменные состояния в необходимые значения\r\n  function closeAllPopups() {\r\n    setProfileIsOpen(false);\r\n    setAvatarIsOpen(false);\r\n    setAddCardIsOpen(false);\r\n    setDeleteIsOpen(false);\r\n    setSelectedCard({\r\n      ...selectedCard,\r\n      isOpen: true,\r\n    });\r\n    setIsLoading(false);\r\n    setTooltip({\r\n      ...tooltip,\r\n      isOpen: false\r\n    });\r\n  }\r\n\r\n // Хэндлеры для открытия попапов\r\n  function handleEditAvatarClick () {\r\n    setAvatarIsOpen(true);\r\n  }\r\n\r\n  function handleEditProfileClick () {\r\n    setProfileIsOpen(true);\r\n  }\r\n\r\n  function handleAddPlaceClick () {\r\n    setAddCardIsOpen(true);\r\n  }\r\n\r\n  function handleCardClick (props) {\r\n    setSelectedCard({\r\n      isOpen: false,\r\n      link: props.link,\r\n      name: props.name\r\n    });\r\n  }\r\n\r\n  // обновить профиль юзера\r\n  function handleUpdateUser(data) {\r\n    setIsLoading(true);\r\n    api.setUserInfo(data)\r\n      .then((res) => {\r\n        setCurrentUser({...currentUser, name: res.name, about: res.about});\r\n        closeAllPopups();\r\n      })\r\n      .catch(err => console.log(err))\r\n      .finally(() => setIsLoading(false))\r\n  }\r\n  // Обновить аватар юзера\r\n  function handleUpdateAvatar(data) {\r\n    setIsLoading(true);\r\n    api.setUserAvatar(data)\r\n      .then((res) => {\r\n        setCurrentUser({...currentUser, avatar: res.avatar});\r\n        closeAllPopups();\r\n      })\r\n      .catch(err => console.log(err))\r\n      .finally(() => setIsLoading(false))\r\n  }\r\n  //функция снять поставить лайк\r\n  function handleCardLike(card) {\r\n    const isLiked = card.likes.some(item => item === currentUser._id);\r\n    api.handleLike(card._id, isLiked)\r\n        .then((newCard) => {\r\n            const newCards = cards.map(item => item._id === card._id ? newCard : item);\r\n            setCards(newCards);\r\n        })\r\n        .catch(err => console.log(err));\r\n}\r\n  // функция открыть попап удаления\r\n  function handleCardDelete (card) {\r\n      setDeleteIsOpen(true);\r\n      setDeleteCard({...card});\r\n  }\r\n  // сабмит удаления карточки\r\n  function deleteCardSubmit () {\r\n      setIsLoading(true)\r\n      api.deleteCard(deleteCard._id)\r\n          .then(() => {\r\n              closeAllPopups();\r\n              const newCards = cards.filter(item => item._id !== deleteCard._id);\r\n              setCards(newCards);\r\n          })\r\n          .catch(err => console.log(err))\r\n          .finally(() => setIsLoading(false))\r\n  }\r\n  //обработчик сабмит добавления карточки\r\n  function handleCardSubmit(data) {\r\n    setIsLoading(true);\r\n    api.postNewCard(data)\r\n      .then((newCard) => {\r\n        setCards([...cards, newCard]);\r\n        closeAllPopups();\r\n      })\r\n      .catch(err => console.log(err))\r\n      .finally(() => setIsLoading(false))\r\n  }\r\n\r\n  //обработчик сабмита входа пользователя\r\n  function handleLogin (data) {\r\n    auth.login({\r\n        password: data.password,\r\n        email: data.email\r\n    })\r\n    .then((res) => {\r\n        localStorage.setItem('jwt', res.token);\r\n        setLoggedIn(true);\r\n        history.push('/')\r\n    })\r\n    .catch((err) => console.log(err))\r\n}\r\n  // обработчика сабмита выхода пользователя\r\n  function handleLogout () {\r\n    localStorage.removeItem('jwt');\r\n    setLoggedIn(false);\r\n    history.push('/signin');\r\n  }\r\n\r\n  // обработчик сабмита регистрации\r\n  function handleRegister (data) {\r\n    auth.register({\r\n      password: data.password,\r\n      email: data.email\r\n    })\r\n    .then((res) => {\r\n        console.log(res);\r\n        setTooltip({\r\n            isOpen: true,\r\n            title: 'Вы успешно зарегистрировались!',\r\n            success: true\r\n        });\r\n        history.push('/');\r\n    })\r\n    .catch((err) => {\r\n        console.log(err);\r\n        setTooltip({\r\n            isOpen: true,\r\n            title: 'Что-то пошло не так! Попробуйте ещё раз.',\r\n            success: false\r\n        });\r\n    })\r\n}\r\n\r\n  // рендер основной страницы\r\n  return (\r\n    <div className=\"page\">\r\n      <CurrentUserContext.Provider value={currentUser}>\r\n        <Header email={email} loggedIn={loggedIn} setLink={headerLink} onClick={handleLogout}/>\r\n        <Switch>\r\n          <ProtectedRoute exact path='/'\r\n            loggedIn={loggedIn}\r\n            component={Main}\r\n            cards={cards}\r\n            onCardLike={handleCardLike}\r\n            onCardDelete={handleCardDelete}\r\n            onEditAvatar={handleEditAvatarClick}\r\n            onEditProfile={handleEditProfileClick}\r\n            onAddPlace={handleAddPlaceClick}\r\n            onCardClick={handleCardClick}\r\n          />\r\n          <Route path='/signin'>\r\n            <Login onSubmit={handleLogin} setLink={setHeaderLink}/>\r\n          </Route>\r\n          <Route path='/signup'>\r\n            <Register onSubmit={handleRegister} setLink={setHeaderLink}/>\r\n          </Route>\r\n          <Route>\r\n            <Redirect to={`/${loggedIn ? '' : 'signin'}`} />\r\n          </Route>\r\n        </Switch>\r\n        <Footer />\r\n        <EditProfilePopup isOpen={profileIsOpen} onClose={closeAllPopups} onSubmit={handleUpdateUser} isLoading={isLoading}/>\r\n        <AddPlacePopup isOpen={addCardIsOpen} onClose={closeAllPopups} onSubmit={handleCardSubmit} isLoading={isLoading}/>\r\n        <EditAvatarPopup isOpen={avatarIsOpen} onClose={closeAllPopups} onSubmit={handleUpdateAvatar} isLoading={isLoading}/>\r\n        <ImagePopup card={selectedCard} onClose={closeAllPopups}/>\r\n        <ConfirmDeletePopup isOpen={deleteIsOpen} onClose={closeAllPopups} isLoading={isLoading} onSubmit={deleteCardSubmit}/>\r\n        <InfoTooltip options={tooltip} onClose={closeAllPopups}/>\r\n      </CurrentUserContext.Provider>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App.js';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}